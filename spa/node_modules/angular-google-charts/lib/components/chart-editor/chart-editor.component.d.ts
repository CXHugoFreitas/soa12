import { OnInit } from '@angular/core';
import { ScriptLoaderService } from '../../script-loader/script-loader.service';
import { ChartBase } from '../chart-base/chart-base.component';
import { ChartEditorRef } from './chart-editor-ref';
import * as ɵngcc0 from '@angular/core';
export declare class ChartEditorComponent implements OnInit {
    private scriptLoaderService;
    private editor;
    private initializedSubject;
    constructor(scriptLoaderService: ScriptLoaderService);
    /**
     * Emits as soon as the chart editor is fully initialized.
     */
    readonly initialized$: import("rxjs").Observable<google.visualization.ChartEditor>;
    ngOnInit(): void;
    /**
     * Opens the chart editor as an embedded dialog box on the page.
     * If the editor gets saved, the components' chart will be updated with the result.
     *
     * @param component The chart to be edited.
     * @returns A reference to the open editor.
     */
    editChart(component: ChartBase): ChartEditorRef;
    editChart(component: ChartBase, options: google.visualization.ChartEditorOptions): ChartEditorRef;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<ChartEditorComponent, never>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<ChartEditorComponent, "chart-editor", never, {}, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhcnQtZWRpdG9yLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJjaGFydC1lZGl0b3IuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7O0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBTY3JpcHRMb2FkZXJTZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2NyaXB0LWxvYWRlci9zY3JpcHQtbG9hZGVyLnNlcnZpY2UnO1xuaW1wb3J0IHsgQ2hhcnRCYXNlIH0gZnJvbSAnLi4vY2hhcnQtYmFzZS9jaGFydC1iYXNlLmNvbXBvbmVudCc7XG5pbXBvcnQgeyBDaGFydEVkaXRvclJlZiB9IGZyb20gJy4vY2hhcnQtZWRpdG9yLXJlZic7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBDaGFydEVkaXRvckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCB7XG4gICAgcHJpdmF0ZSBzY3JpcHRMb2FkZXJTZXJ2aWNlO1xuICAgIHByaXZhdGUgZWRpdG9yO1xuICAgIHByaXZhdGUgaW5pdGlhbGl6ZWRTdWJqZWN0O1xuICAgIGNvbnN0cnVjdG9yKHNjcmlwdExvYWRlclNlcnZpY2U6IFNjcmlwdExvYWRlclNlcnZpY2UpO1xuICAgIC8qKlxuICAgICAqIEVtaXRzIGFzIHNvb24gYXMgdGhlIGNoYXJ0IGVkaXRvciBpcyBmdWxseSBpbml0aWFsaXplZC5cbiAgICAgKi9cbiAgICByZWFkb25seSBpbml0aWFsaXplZCQ6IGltcG9ydChcInJ4anNcIikuT2JzZXJ2YWJsZTxnb29nbGUudmlzdWFsaXphdGlvbi5DaGFydEVkaXRvcj47XG4gICAgbmdPbkluaXQoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBPcGVucyB0aGUgY2hhcnQgZWRpdG9yIGFzIGFuIGVtYmVkZGVkIGRpYWxvZyBib3ggb24gdGhlIHBhZ2UuXG4gICAgICogSWYgdGhlIGVkaXRvciBnZXRzIHNhdmVkLCB0aGUgY29tcG9uZW50cycgY2hhcnQgd2lsbCBiZSB1cGRhdGVkIHdpdGggdGhlIHJlc3VsdC5cbiAgICAgKlxuICAgICAqIEBwYXJhbSBjb21wb25lbnQgVGhlIGNoYXJ0IHRvIGJlIGVkaXRlZC5cbiAgICAgKiBAcmV0dXJucyBBIHJlZmVyZW5jZSB0byB0aGUgb3BlbiBlZGl0b3IuXG4gICAgICovXG4gICAgZWRpdENoYXJ0KGNvbXBvbmVudDogQ2hhcnRCYXNlKTogQ2hhcnRFZGl0b3JSZWY7XG4gICAgZWRpdENoYXJ0KGNvbXBvbmVudDogQ2hhcnRCYXNlLCBvcHRpb25zOiBnb29nbGUudmlzdWFsaXphdGlvbi5DaGFydEVkaXRvck9wdGlvbnMpOiBDaGFydEVkaXRvclJlZjtcbn1cbiJdfQ==